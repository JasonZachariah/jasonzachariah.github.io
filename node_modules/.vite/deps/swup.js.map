{
  "version": 3,
  "sources": ["../../delegate-it/delegate.js", "../../path-to-regexp/src/index.ts", "../../swup/src/helpers/classify.ts", "../../swup/src/helpers/getCurrentUrl.ts", "../../swup/src/helpers/history.ts", "../../swup/src/helpers/delegateEvent.ts", "../../swup/src/helpers/Location.ts", "../../swup/src/helpers/matchPath.ts", "../../swup/src/modules/fetchPage.ts", "../../swup/src/modules/Cache.ts", "../../swup/src/utils/index.ts", "../../swup/src/modules/Classes.ts", "../../swup/src/modules/Visit.ts", "../../swup/src/modules/Hooks.ts", "../../swup/src/modules/getAnchorElement.ts", "../../swup/src/modules/awaitAnimations.ts", "../../swup/src/modules/navigate.ts", "../../swup/src/modules/animatePageOut.ts", "../../swup/src/modules/replaceContent.ts", "../../swup/src/modules/scrollToContent.ts", "../../swup/src/modules/animatePageIn.ts", "../../swup/src/modules/renderPage.ts", "../../swup/src/modules/plugins.ts", "../../swup/src/modules/resolveUrl.ts", "../../swup/src/Swup.ts"],
  "sourcesContent": ["/** Keeps track of raw listeners added to the base elements to avoid duplication */\nconst ledger = new WeakMap();\nfunction editLedger(wanted, baseElement, callback, setup) {\n    if (!wanted && !ledger.has(baseElement)) {\n        return false;\n    }\n    const elementMap = ledger.get(baseElement)\n        ?? new WeakMap();\n    ledger.set(baseElement, elementMap);\n    const setups = elementMap.get(callback) ?? new Set();\n    elementMap.set(callback, setups);\n    const existed = setups.has(setup);\n    if (wanted) {\n        setups.add(setup);\n    }\n    else {\n        setups.delete(setup);\n    }\n    return existed && wanted;\n}\nfunction safeClosest(event, selector) {\n    let target = event.target;\n    if (target instanceof Text) {\n        target = target.parentElement;\n    }\n    if (target instanceof Element && event.currentTarget instanceof Element) {\n        // `.closest()` may match ancestors of `currentTarget` but we only need its children\n        const closest = target.closest(selector);\n        if (closest && event.currentTarget.contains(closest)) {\n            return closest;\n        }\n    }\n}\n// This type isn't exported as a declaration, so it needs to be duplicated above\nfunction delegate(selector, type, callback, options = {}) {\n    const { signal, base = document } = options;\n    if (signal?.aborted) {\n        return;\n    }\n    // Don't pass `once` to `addEventListener` because it needs to be handled in `delegate-it`\n    const { once, ...nativeListenerOptions } = options;\n    // `document` should never be the base, it's just an easy way to define \"global event listeners\"\n    const baseElement = base instanceof Document ? base.documentElement : base;\n    // Handle the regular Element usage\n    const capture = Boolean(typeof options === 'object' ? options.capture : options);\n    const listenerFunction = (event) => {\n        const delegateTarget = safeClosest(event, String(selector));\n        if (delegateTarget) {\n            const delegateEvent = Object.assign(event, { delegateTarget });\n            callback.call(baseElement, delegateEvent);\n            if (once) {\n                baseElement.removeEventListener(type, listenerFunction, nativeListenerOptions);\n                editLedger(false, baseElement, callback, setup);\n            }\n        }\n    };\n    const setup = JSON.stringify({ selector, type, capture });\n    const isAlreadyListening = editLedger(true, baseElement, callback, setup);\n    if (!isAlreadyListening) {\n        baseElement.addEventListener(type, listenerFunction, nativeListenerOptions);\n    }\n    signal?.addEventListener('abort', () => {\n        editLedger(false, baseElement, callback, setup);\n    });\n}\nexport default delegate;\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "/** Turn a string into a slug by lowercasing and replacing whitespace. */\nexport const classify = (text: string, fallback?: string): string => {\n\tconst output = String(text)\n\t\t.toLowerCase()\n\t\t// .normalize('NFD') // split an accented letter in the base letter and the acent\n\t\t// .replace(/[\\u0300-\\u036f]/g, '') // remove all previously split accents\n\t\t.replace(/[\\s/_.]+/g, '-') // replace spaces and _./ with '-'\n\t\t.replace(/[^\\w-]+/g, '') // remove all non-word chars\n\t\t.replace(/--+/g, '-') // replace repeating '-' with single '-'\n\t\t.replace(/^-+|-+$/g, ''); // trim '-' from edges\n\treturn output || fallback || '';\n};\n", "/** Get the current page URL: path name + query params. Optionally including hash. */\nexport const getCurrentUrl = ({ hash }: { hash?: boolean } = {}): string => {\n\treturn window.location.pathname + window.location.search + (hash ? window.location.hash : '');\n};\n", "import { getCurrentUrl } from './getCurrentUrl.js';\n\nexport interface HistoryState {\n\turl: string;\n\tsource: 'swup';\n\trandom: number;\n\tindex?: number;\n\t[key: string]: unknown;\n}\n\ntype HistoryData = Record<string, unknown>;\n\n/** Create a new history record with a custom swup identifier. */\nexport const createHistoryRecord = (url: string, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst state: HistoryState = {\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.pushState(state, '', url);\n};\n\n/** Update the current history record with a custom swup identifier. */\nexport const updateHistoryRecord = (url: string | null = null, data: HistoryData = {}): void => {\n\turl = url || getCurrentUrl({ hash: true });\n\tconst currentState = (window.history.state as HistoryState) || {};\n\tconst state: HistoryState = {\n\t\t...currentState,\n\t\turl,\n\t\trandom: Math.random(),\n\t\tsource: 'swup',\n\t\t...data\n\t};\n\twindow.history.replaceState(state, '', url);\n};\n", "import delegate, {\n\ttype DelegateEventHandler,\n\ttype DelegateOptions,\n\ttype EventType\n} from 'delegate-it';\nimport type { ParseSelector } from 'typed-query-selector/parser.js';\n\nexport type DelegateEventUnsubscribe = {\n\tdestroy: () => void;\n};\n\n/** Register a delegated event listener. */\nexport const delegateEvent = <\n\tSelector extends string,\n\tTElement extends Element = ParseSelector<Selector, HTMLElement>,\n\tTEvent extends EventType = EventType\n>(\n\tselector: Selector,\n\ttype: TEvent,\n\tcallback: DelegateEventHandler<GlobalEventHandlersEventMap[TEvent], TElement>,\n\toptions?: DelegateOptions\n): DelegateEventUnsubscribe => {\n\tconst controller = new AbortController();\n\toptions = { ...options, signal: controller.signal };\n\tdelegate<Selector, TElement, TEvent>(selector, type, callback, options);\n\treturn { destroy: () => controller.abort() };\n};\n", "/**\n * A helper for creating a Location from either an element\n * or a URL object/string\n *\n */\nexport class Location extends URL {\n\tconstructor(url: URL | string, base: string = document.baseURI) {\n\t\tsuper(url.toString(), base);\n\t\t// Fix Safari bug with extending native classes\n\t\tObject.setPrototypeOf(this, Location.prototype);\n\t}\n\n\t/**\n\t * The full local path including query params.\n\t */\n\tget url(): string {\n\t\treturn this.pathname + this.search;\n\t}\n\n\t/**\n\t * Instantiate a Location from an element's href attribute\n\t * @param el\n\t * @returns new Location instance\n\t */\n\tstatic fromElement(el: Element): Location {\n\t\tconst href = el.getAttribute('href') || el.getAttribute('xlink:href') || '';\n\t\treturn new Location(href);\n\t}\n\n\t/**\n\t * Instantiate a Location from a URL object or string\n\t * @param url\n\t * @returns new Location instance\n\t */\n\tstatic fromUrl(url: URL | string): Location {\n\t\treturn new Location(url);\n\t}\n}\n", "import { match } from 'path-to-regexp';\n\nimport type { Path, MatchFunction } from 'path-to-regexp';\n\nexport { type Path };\n\ntype Params = Parameters<typeof match>;\n\n/** Create a match function from a path pattern that checks if a URLs matches it. */\nexport const matchPath = <P extends object = object>(\n\tpath: Params[0],\n\toptions?: Params[1]\n): MatchFunction<P> => {\n\tif (Array.isArray(path) && !path.length) {\n\t\tpath = '';\n\t}\n\n\ttry {\n\t\treturn match<P>(path, options);\n\t} catch (error) {\n\t\tthrow new Error(`[swup] Error parsing path \"${String(path)}\":\\n${String(error)}`);\n\t}\n};\n", "import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport type { Visit } from './Visit.js';\n\n/** A page object as used by swup and its cache. */\nexport interface PageData {\n\t/** The URL of the page */\n\turl: string;\n\t/** The complete HTML response received from the server */\n\thtml: string;\n}\n\n/** Define how a page is fetched. */\nexport interface FetchOptions extends Omit<RequestInit, 'cache'> {\n\t/** The request method. */\n\tmethod?: 'GET' | 'POST';\n\t/** The body of the request: raw string, form data object or URL params. */\n\tbody?: string | FormData | URLSearchParams;\n\t/** The request timeout in milliseconds. */\n\ttimeout?: number;\n\t/** Optional visit object with additional context. @internal */\n\tvisit?: Visit;\n}\n\nexport class FetchError extends Error {\n\turl: string;\n\tstatus?: number;\n\taborted: boolean;\n\ttimedOut: boolean;\n\tconstructor(\n\t\tmessage: string,\n\t\tdetails: { url: string; status?: number; aborted?: boolean; timedOut?: boolean }\n\t) {\n\t\tsuper(message);\n\t\tthis.name = 'FetchError';\n\t\tthis.url = details.url;\n\t\tthis.status = details.status;\n\t\tthis.aborted = details.aborted || false;\n\t\tthis.timedOut = details.timedOut || false;\n\t}\n}\n\n/**\n * Fetch a page from the server, return it and cache it.\n */\nexport async function fetchPage(\n\tthis: Swup,\n\turl: URL | string,\n\toptions: FetchOptions = {}\n): Promise<PageData> {\n\turl = Location.fromUrl(url).url;\n\n\tconst { visit = this.visit } = options;\n\tconst headers = { ...this.options.requestHeaders, ...options.headers };\n\tconst timeout = options.timeout ?? this.options.timeout;\n\tconst controller = new AbortController();\n\tconst { signal } = controller;\n\toptions = { ...options, headers, signal };\n\n\tlet timedOut = false;\n\tlet timeoutId: ReturnType<typeof setTimeout> | null = null;\n\tif (timeout && timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimedOut = true;\n\t\t\tcontroller.abort('timeout');\n\t\t}, timeout);\n\t}\n\n\t// Allow hooking before this and returning a custom response-like object (e.g. custom fetch implementation)\n\tlet response: Response;\n\ttry {\n\t\tresponse = await this.hooks.call(\n\t\t\t'fetch:request',\n\t\t\tvisit,\n\t\t\t{ url, options },\n\t\t\t(visit, { url, options }) => fetch(url, options)\n\t\t);\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t}\n\t} catch (error) {\n\t\tif (timedOut) {\n\t\t\tthis.hooks.call('fetch:timeout', visit, { url });\n\t\t\tthrow new FetchError(`Request timed out: ${url}`, { url, timedOut });\n\t\t}\n\t\tif ((error as Error)?.name === 'AbortError' || signal.aborted) {\n\t\t\tthrow new FetchError(`Request aborted: ${url}`, { url, aborted: true });\n\t\t}\n\t\tthrow error;\n\t}\n\n\tconst { status, url: responseUrl } = response;\n\tconst html = await response.text();\n\n\tif (status === 500) {\n\t\tthis.hooks.call('fetch:error', visit, { status, response, url: responseUrl });\n\t\tthrow new FetchError(`Server error: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\tif (!html) {\n\t\tthrow new FetchError(`Empty response: ${responseUrl}`, { status, url: responseUrl });\n\t}\n\n\t// Resolve real url after potential redirect\n\tconst { url: finalUrl } = Location.fromUrl(responseUrl);\n\tconst page = { url: finalUrl, html };\n\n\t// Write to cache for safe methods and non-redirects\n\tif (visit.cache.write && (!options.method || options.method === 'GET') && url === finalUrl) {\n\t\tthis.cache.set(page.url, page);\n\t}\n\n\treturn page;\n}\n", "import type Swup from '../Swup.js';\nimport { Location } from '../helpers.js';\nimport { type PageData } from './fetchPage.js';\n\nexport interface CacheData extends PageData {}\n\n/**\n * In-memory page cache.\n */\nexport class Cache {\n\t/** Swup instance this cache belongs to */\n\tprotected swup: Swup;\n\n\t/** Cached pages, indexed by URL */\n\tprotected pages: Map<string, CacheData> = new Map();\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\t/** Number of cached pages in memory. */\n\tget size(): number {\n\t\treturn this.pages.size;\n\t}\n\n\t/** All cached pages. */\n\tget all() {\n\t\tconst copy = new Map();\n\t\tthis.pages.forEach((page, key) => {\n\t\t\tcopy.set(key, { ...page });\n\t\t});\n\t\treturn copy;\n\t}\n\n\t/** Check if the given URL has been cached. */\n\thas(url: string): boolean {\n\t\treturn this.pages.has(this.resolve(url));\n\t}\n\n\t/** Return a shallow copy of the cached page object if available. */\n\tget(url: string): CacheData | undefined {\n\t\tconst result = this.pages.get(this.resolve(url));\n\t\tif (!result) return result;\n\t\treturn { ...result };\n\t}\n\n\t/** Create a cache record for the specified URL. */\n\tset(url: string, page: CacheData) {\n\t\turl = this.resolve(url);\n\t\tpage = { ...page, url };\n\t\tthis.pages.set(url, page);\n\t\tthis.swup.hooks.callSync('cache:set', undefined, { page });\n\t}\n\n\t/** Update a cache record, overwriting or adding custom data. */\n\tupdate(url: string, payload: object) {\n\t\turl = this.resolve(url);\n\t\tconst page = { ...this.get(url), ...payload, url } as CacheData;\n\t\tthis.pages.set(url, page);\n\t}\n\n\t/** Delete a cache record. */\n\tdelete(url: string): void {\n\t\tthis.pages.delete(this.resolve(url));\n\t}\n\n\t/** Empty the cache. */\n\tclear(): void {\n\t\tthis.pages.clear();\n\t\tthis.swup.hooks.callSync('cache:clear', undefined, undefined);\n\t}\n\n\t/** Remove all cache entries that return true for a given predicate function.  */\n\tprune(predicate: (url: string, page: CacheData) => boolean): void {\n\t\tthis.pages.forEach((page, url) => {\n\t\t\tif (predicate(url, page)) {\n\t\t\t\tthis.delete(url);\n\t\t\t}\n\t\t});\n\t}\n\n\t/** Resolve URLs by making them local and letting swup resolve them. */\n\tprotected resolve(urlToResolve: string): string {\n\t\tconst { url } = Location.fromUrl(urlToResolve);\n\t\treturn this.swup.resolveUrl(url);\n\t}\n}\n", "/** Find an element by selector. */\nexport const query = (selector: string, context: Document | Element = document) => {\n\treturn context.querySelector<HTMLElement>(selector);\n};\n\n/** Find a set of elements by selector. */\nexport const queryAll = (\n\tselector: string,\n\tcontext: Document | Element = document\n): HTMLElement[] => {\n\treturn Array.from(context.querySelectorAll(selector));\n};\n\n/** Return a Promise that resolves after the next event loop. */\nexport const nextTick = (): Promise<void> => {\n\treturn new Promise((resolve) => {\n\t\trequestAnimationFrame(() => {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n};\n\n/** Check if an object is a Promise or a Thenable */\nexport function isPromise<T>(obj: unknown): obj is PromiseLike<T> {\n\treturn (\n\t\t!!obj &&\n\t\t(typeof obj === 'object' || typeof obj === 'function') &&\n\t\ttypeof (obj as Record<string, unknown>).then === 'function'\n\t);\n}\n\n/** Call a function as a Promise. Resolves with the returned Promsise or immediately. */\n// eslint-disable-next-line @typescript-eslint/ban-types, @typescript-eslint/no-explicit-any\nexport function runAsPromise(func: Function, args: unknown[] = []): Promise<unknown> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst result: unknown = func(...args);\n\t\tif (isPromise(result)) {\n\t\t\tresult.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(result);\n\t\t}\n\t});\n}\n\n/**\n * Force a layout reflow, e.g. after adding classnames\n * @see https://stackoverflow.com/a/21665117/3759615\n */\nexport function forceReflow(element?: HTMLElement): void {\n\telement = element || document.body;\n\telement?.getBoundingClientRect();\n}\n\n/**\n * Read data attribute from closest element with that attribute.\n *\n * Returns `undefined` if no element is found or attribute is missing.\n * Returns `true` if attribute is present without a value.\n */\nexport function getContextualAttr(\n\tel: Element | undefined,\n\tattr: string\n): string | boolean | undefined {\n\tconst target = el?.closest(`[${attr}]`);\n\treturn target?.hasAttribute(attr) ? target?.getAttribute(attr) || true : undefined;\n}\n", "import type Swup from '../Swup.js';\nimport { queryAll } from '../utils.js';\n\nexport class Classes {\n\tprotected swup: Swup;\n\tprotected swupClasses = [\n\t\t'to-',\n\t\t'is-changing',\n\t\t'is-rendering',\n\t\t'is-popstate',\n\t\t'is-animating',\n\t\t'is-leaving'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t}\n\n\tprotected get selectors(): string[] {\n\t\tconst { scope } = this.swup.visit.animation;\n\t\tif (scope === 'containers') return this.swup.visit.containers;\n\t\tif (scope === 'html') return ['html'];\n\t\tif (Array.isArray(scope)) return scope;\n\t\treturn [];\n\t}\n\n\tprotected get selector(): string {\n\t\treturn this.selectors.join(',');\n\t}\n\n\tprotected get targets(): HTMLElement[] {\n\t\tif (!this.selector.trim()) return [];\n\t\treturn queryAll(this.selector);\n\t}\n\n\tadd(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.add(...classes));\n\t}\n\n\tremove(...classes: string[]): void {\n\t\tthis.targets.forEach((target) => target.classList.remove(...classes));\n\t}\n\n\tclear(): void {\n\t\tthis.targets.forEach((target) => {\n\t\t\tconst remove = target.className.split(' ').filter((c) => this.isSwupClass(c));\n\t\t\ttarget.classList.remove(...remove);\n\t\t});\n\t}\n\n\tprotected isSwupClass(className: string): boolean {\n\t\treturn this.swupClasses.some((c) => className.startsWith(c));\n\t}\n}\n", "import type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\nimport type { HistoryAction, HistoryDirection } from './navigate.js';\n\n/** See below for the class Visit {} definition */\n// export interface Visit {}\n\nexport interface VisitFrom {\n\t/** The URL of the previous page */\n\turl: string;\n\t/** The hash of the previous page */\n\thash?: string;\n}\n\nexport interface VisitTo {\n\t/** The URL of the next page */\n\turl: string;\n\t/** The hash of the next page */\n\thash?: string;\n\t/** The HTML content of the next page */\n\thtml?: string;\n\t/** The parsed document of the next page, available during visit */\n\tdocument?: Document;\n}\n\nexport interface VisitAnimation {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate: boolean;\n\t/** Whether to wait for the next page to load before starting the animation. Default: `false` */\n\twait: boolean;\n\t/** Name of a custom animation to run. */\n\tname?: string;\n\t/** Whether this animation uses the native browser ViewTransition API. Default: `false` */\n\tnative: boolean;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tscope: 'html' | 'containers' | string[];\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tselector: Options['animationSelector'];\n}\n\nexport interface VisitScroll {\n\t/** Whether to reset the scroll position after the visit. Default: `true` */\n\treset: boolean;\n\t/** Anchor element to scroll to on the next page. */\n\ttarget?: string | false;\n}\n\nexport interface VisitTrigger {\n\t/** DOM element that triggered this visit. */\n\tel?: Element;\n\t/** DOM event that triggered this visit. */\n\tevent?: Event;\n}\n\nexport interface VisitCache {\n\t/** Whether this visit will try to load the requested page from cache. */\n\tread: boolean;\n\t/** Whether this visit will save the loaded page in cache. */\n\twrite: boolean;\n}\n\nexport interface VisitHistory {\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\taction: HistoryAction;\n\t/** Whether this visit was triggered by a browser history navigation. */\n\tpopstate: boolean;\n\t/** The direction of travel in case of a browser history navigation: backward or forward. */\n\tdirection: HistoryDirection | undefined;\n}\n\nexport interface VisitInitOptions {\n\tto: string;\n\tfrom?: string;\n\thash?: string;\n\tel?: Element;\n\tevent?: Event;\n}\n\n/** @internal */\nexport const VisitState = {\n\tCREATED: 1,\n\tQUEUED: 2,\n\tSTARTED: 3,\n\tLEAVING: 4,\n\tLOADED: 5,\n\tENTERING: 6,\n\tCOMPLETED: 7,\n\tABORTED: 8,\n\tFAILED: 9\n} as const;\n\n/** @internal */\nexport type VisitState = (typeof VisitState)[keyof typeof VisitState];\n\n/** An object holding details about the current visit. */\nexport class Visit {\n\t/** A unique ID to identify this visit */\n\tid: number;\n\t/** The current state of this visit @internal */\n\tstate: VisitState;\n\t/** The previous page, about to leave */\n\tfrom: VisitFrom;\n\t/** The next page, about to enter */\n\tto: VisitTo;\n\t/** The content containers, about to be replaced */\n\tcontainers: Options['containers'];\n\t/** Information about animated page transitions */\n\tanimation: VisitAnimation;\n\t/** What triggered this visit */\n\ttrigger: VisitTrigger;\n\t/** Cache behavior for this visit */\n\tcache: VisitCache;\n\t/** Browser history behavior on this visit */\n\thistory: VisitHistory;\n\t/** Scroll behavior on this visit */\n\tscroll: VisitScroll;\n\t/** User-defined metadata */\n\tmeta: Record<string, unknown>;\n\n\tconstructor(swup: Swup, options: VisitInitOptions) {\n\t\tconst { to, from, hash, el, event } = options;\n\n\t\tthis.id = Math.random();\n\t\tthis.state = VisitState.CREATED;\n\t\tthis.from = { url: from ?? swup.location.url, hash: swup.location.hash };\n\t\tthis.to = { url: to, hash };\n\t\tthis.containers = swup.options.containers;\n\t\tthis.animation = {\n\t\t\tanimate: true,\n\t\t\twait: false,\n\t\t\tname: undefined,\n\t\t\tnative: swup.options.native,\n\t\t\tscope: swup.options.animationScope,\n\t\t\tselector: swup.options.animationSelector\n\t\t};\n\t\tthis.trigger = { el, event };\n\t\tthis.cache = {\n\t\t\tread: swup.options.cache,\n\t\t\twrite: swup.options.cache\n\t\t};\n\t\tthis.history = {\n\t\t\taction: 'push',\n\t\t\tpopstate: false,\n\t\t\tdirection: undefined\n\t\t};\n\t\tthis.scroll = {\n\t\t\treset: true,\n\t\t\ttarget: undefined\n\t\t};\n\t\tthis.meta = {};\n\t}\n\n\t/** @internal */\n\tadvance(state: VisitState) {\n\t\tif (this.state < state) {\n\t\t\tthis.state = state;\n\t\t}\n\t}\n\n\t/** @internal */\n\tabort() {\n\t\tthis.state = VisitState.ABORTED;\n\t}\n\n\t/** Is this visit done, i.e. completed, failed, or aborted? */\n\tget done(): boolean {\n\t\treturn this.state >= VisitState.COMPLETED;\n\t}\n}\n\n/** Create a new visit object. */\nexport function createVisit(this: Swup, options: VisitInitOptions): Visit {\n\treturn new Visit(this, options);\n}\n", "import type { DelegateEvent } from 'delegate-it';\n\nimport type Swup from '../Swup.js';\nimport { isPromise, runAsPromise } from '../utils.js';\nimport { Visit } from './Visit.js';\nimport type { FetchOptions, PageData } from './fetchPage.js';\n\nexport interface HookDefinitions {\n\t'animation:out:start': undefined;\n\t'animation:out:await': { skip: boolean };\n\t'animation:out:end': undefined;\n\t'animation:in:start': undefined;\n\t'animation:in:await': { skip: boolean };\n\t'animation:in:end': undefined;\n\t'animation:skip': undefined;\n\t'cache:clear': undefined;\n\t'cache:set': { page: PageData };\n\t'content:replace': { page: PageData };\n\t'content:scroll': undefined;\n\t'enable': undefined;\n\t'disable': undefined;\n\t'fetch:request': { url: string; options: FetchOptions };\n\t'fetch:error': { url: string; status: number; response: Response };\n\t'fetch:timeout': { url: string };\n\t'history:popstate': { event: PopStateEvent };\n\t'link:click': { el: HTMLAnchorElement; event: DelegateEvent<MouseEvent> };\n\t'link:self': undefined;\n\t'link:anchor': { hash: string };\n\t'link:newtab': { href: string };\n\t'page:load': { page?: PageData; cache?: boolean; options: FetchOptions };\n\t'page:view': { url: string; title: string };\n\t'scroll:top': { options: ScrollIntoViewOptions };\n\t'scroll:anchor': { hash: string; options: ScrollIntoViewOptions };\n\t'visit:start': undefined;\n\t'visit:transition': undefined;\n\t'visit:abort': undefined;\n\t'visit:end': undefined;\n}\n\nexport interface HookReturnValues {\n\t'content:scroll': Promise<boolean> | boolean;\n\t'fetch:request': Promise<Response>;\n\t'page:load': Promise<PageData>;\n\t'scroll:top': boolean;\n\t'scroll:anchor': boolean;\n}\n\nexport type HookArguments<T extends HookName> = HookDefinitions[T];\n\nexport type HookName = keyof HookDefinitions;\n\nexport type HookNameWithModifier = `${HookName}.${HookModifier}`;\n\ntype HookModifier = 'once' | 'before' | 'replace';\n\n/** A generic hook handler. */\nexport type HookHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>\n) => Promise<unknown> | unknown;\n\n/** A default hook handler with an expected return type. */\nexport type HookDefaultHandler<T extends HookName> = (\n\t/** Context about the current visit. */\n\tvisit: Visit,\n\t/** Local arguments passed into the handler. */\n\targs: HookArguments<T>,\n\t/** Default handler to be executed. Available if replacing an internal hook handler. */\n\tdefaultHandler?: HookDefaultHandler<T>\n) => T extends keyof HookReturnValues ? HookReturnValues[T] : Promise<unknown> | unknown;\n\nexport type Handlers = {\n\t[K in HookName]: HookHandler<K>[];\n};\n\nexport type HookInitOptions = {\n\t[K in HookName as K | `${K}.${HookModifier}`]: HookHandler<K>;\n} & {\n\t[K in HookName as K | `${K}.${HookModifier}.${HookModifier}`]: HookHandler<K>;\n};\n\n/** Unregister a previously registered hook handler. */\nexport type HookUnregister = () => void;\n\n/** Define when and how a hook handler is executed. */\nexport type HookOptions = {\n\t/** Execute the hook once, then remove the handler */\n\tonce?: boolean;\n\t/** Execute the hook before the internal default handler */\n\tbefore?: boolean;\n\t/** Set a priority for when to execute this hook. Lower numbers execute first. Default: `0` */\n\tpriority?: number;\n\t/** Replace the internal default handler with this hook handler */\n\treplace?: boolean;\n};\n\nexport type HookRegistration<\n\tT extends HookName,\n\tH extends HookHandler<T> | HookDefaultHandler<T> = HookHandler<T>\n> = {\n\tid: number;\n\thook: T;\n\thandler: H;\n\tdefaultHandler?: HookDefaultHandler<T>;\n} & HookOptions;\n\ntype HookEventDetail = {\n\thook: HookName;\n\targs: unknown;\n\tvisit: Visit;\n};\n\nexport type HookEvent = CustomEvent<HookEventDetail>;\n\ntype HookLedger<T extends HookName> = Map<HookHandler<T>, HookRegistration<T>>;\n\ninterface HookRegistry extends Map<HookName, HookLedger<HookName>> {\n\tget<K extends HookName>(key: K): HookLedger<K> | undefined;\n\tset<K extends HookName>(key: K, value: HookLedger<K>): this;\n}\n\n/**\n * Hook registry.\n *\n * Create, trigger and handle hooks.\n *\n */\nexport class Hooks {\n\t/** Swup instance this registry belongs to */\n\tprotected swup: Swup;\n\n\t/** Map of all registered hook handlers. */\n\tprotected registry: HookRegistry = new Map();\n\n\t// Can we deduplicate this somehow? Or make it error when not in sync with HookDefinitions?\n\t// https://stackoverflow.com/questions/53387838/how-to-ensure-an-arrays-values-the-keys-of-a-typescript-interface/53395649\n\tprotected readonly hooks: HookName[] = [\n\t\t'animation:out:start',\n\t\t'animation:out:await',\n\t\t'animation:out:end',\n\t\t'animation:in:start',\n\t\t'animation:in:await',\n\t\t'animation:in:end',\n\t\t'animation:skip',\n\t\t'cache:clear',\n\t\t'cache:set',\n\t\t'content:replace',\n\t\t'content:scroll',\n\t\t'enable',\n\t\t'disable',\n\t\t'fetch:request',\n\t\t'fetch:error',\n\t\t'fetch:timeout',\n\t\t'history:popstate',\n\t\t'link:click',\n\t\t'link:self',\n\t\t'link:anchor',\n\t\t'link:newtab',\n\t\t'page:load',\n\t\t'page:view',\n\t\t'scroll:top',\n\t\t'scroll:anchor',\n\t\t'visit:start',\n\t\t'visit:transition',\n\t\t'visit:abort',\n\t\t'visit:end'\n\t];\n\n\tconstructor(swup: Swup) {\n\t\tthis.swup = swup;\n\t\tthis.init();\n\t}\n\n\t/**\n\t * Create ledgers for all core hooks.\n\t */\n\tprotected init() {\n\t\tthis.hooks.forEach((hook) => this.create(hook));\n\t}\n\n\t/**\n\t * Create a new hook type.\n\t */\n\tcreate(hook: string) {\n\t\tif (!this.registry.has(hook as HookName)) {\n\t\t\tthis.registry.set(hook as HookName, new Map());\n\t\t}\n\t}\n\n\t/**\n\t * Check if a hook type exists.\n\t */\n\texists(hook: HookName): boolean {\n\t\treturn this.registry.has(hook);\n\t}\n\n\t/**\n\t * Get the ledger with all registrations for a hook.\n\t */\n\tprotected get<T extends HookName>(hook: T): HookLedger<T> | undefined {\n\t\tconst ledger = this.registry.get(hook);\n\t\tif (ledger) {\n\t\t\treturn ledger;\n\t\t}\n\t\tconsole.error(`Unknown hook '${hook}'`);\n\t}\n\n\t/**\n\t * Remove all handlers of all hooks.\n\t */\n\tclear() {\n\t\tthis.registry.forEach((ledger) => ledger.clear());\n\t}\n\n\t/**\n\t * Register a new hook handler.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Object to specify how and when the handler is executed\n\t *                Available options:\n\t *                - `once`: Only execute the handler once\n\t *                - `before`: Execute the handler before the default handler\n\t *                - `priority`: Specify the order in which the handlers are executed\n\t *                - `replace`: Replace the default handler with this handler\n\t * @returns A function to unregister the handler\n\t */\n\n\t// Overload: replacing default handler\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookDefaultHandler<T>, options: O & { replace: true }): HookUnregister; // prettier-ignore\n\t// Overload: passed in handler options\n\ton<T extends HookName, O extends HookOptions>(hook: T, handler: HookHandler<T>, options: O): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\ton<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\ton<T extends HookName, O extends HookOptions>(\n\t\thook: T,\n\t\thandler: O['replace'] extends true ? HookDefaultHandler<T> : HookHandler<T>,\n\t\toptions: Partial<O> = {}\n\t): HookUnregister {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\tconsole.warn(`Hook '${hook}' not found.`);\n\t\t\treturn () => {};\n\t\t}\n\n\t\tconst id = ledger.size + 1;\n\t\tconst registration: HookRegistration<T> = { ...options, id, hook, handler };\n\t\tledger.set(handler, registration);\n\n\t\treturn () => this.off(hook, handler);\n\t}\n\n\t/**\n\t * Register a new hook handler to run before the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { before: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tbefore<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tbefore<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, before: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to replace the default handler.\n\t * Shortcut for `hooks.on(hook, handler, { replace: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute instead of the default handler\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @returns A function to unregister the handler\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\treplace<T extends HookName>(hook: T, handler: HookDefaultHandler<T>): HookUnregister; // prettier-ignore\n\t// Implementation\n\treplace<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookDefaultHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, replace: true });\n\t}\n\n\t/**\n\t * Register a new hook handler to run once.\n\t * Shortcut for `hooks.on(hook, handler, { once: true })`.\n\t * @param hook Name of the hook to listen for\n\t * @param handler The handler function to execute\n\t * @param options Any other event options (see `hooks.on()` for details)\n\t * @see on\n\t */\n\t// Overload: passed in handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>, options: HookOptions): HookUnregister; // prettier-ignore\n\t// Overload: no handler options\n\tonce<T extends HookName>(hook: T, handler: HookHandler<T>): HookUnregister;\n\t// Implementation\n\tonce<T extends HookName>(\n\t\thook: T,\n\t\thandler: HookHandler<T>,\n\t\toptions: HookOptions = {}\n\t): HookUnregister {\n\t\treturn this.on(hook, handler, { ...options, once: true });\n\t}\n\n\t/**\n\t * Unregister a hook handler.\n\t * @param hook Name of the hook the handler is registered for\n\t * @param handler The handler function that was registered.\n\t *                If omitted, all handlers for the hook will be removed.\n\t */\n\t// Overload: unregister a specific handler\n\toff<T extends HookName>(hook: T, handler: HookHandler<T> | HookDefaultHandler<T>): void;\n\t// Overload: unregister all handlers\n\toff<T extends HookName>(hook: T): void;\n\t// Implementation\n\toff<T extends HookName>(hook: T, handler?: HookHandler<T> | HookDefaultHandler<T>): void {\n\t\tconst ledger = this.get(hook);\n\t\tif (ledger && handler) {\n\t\t\tconst deleted = ledger.delete(handler);\n\t\t\tif (!deleted) {\n\t\t\t\tconsole.warn(`Handler for hook '${hook}' not found.`);\n\t\t\t}\n\t\t} else if (ledger) {\n\t\t\tledger.clear();\n\t\t}\n\t}\n\n\t/**\n\t * Trigger a hook asynchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order and `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The resolved return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tasync call<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tasync call<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>>; // prettier-ignore\n\t// Implementation\n\tasync call<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tawait this.run(before, visit, args);\n\t\tconst [result] = await this.run(handler, visit, args, true);\n\t\tawait this.run(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Trigger a hook synchronously, executing its default handler and all registered handlers.\n\t * Will execute all handlers in order, but will **not** `await` any `Promise`s they return.\n\t * @param hook Name of the hook to trigger\n\t * @param visit The visit object this hook belongs to\n\t * @param args Arguments to pass to the handler\n\t * @param defaultHandler A default implementation of this hook to execute\n\t * @returns The (possibly unresolved) return value of the executed default handler\n\t */\n\t// Overload: default order of arguments\n\tcallSync<T extends HookName>(hook: T, visit: Visit | undefined, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Overload: legacy order of arguments, with visit missing\n\tcallSync<T extends HookName>(hook: T, args: HookArguments<T>, defaultHandler?: HookDefaultHandler<T>): ReturnType<HookDefaultHandler<T>>; // prettier-ignore\n\t// Implementation\n\tcallSync<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T>,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): ReturnType<HookDefaultHandler<T>> {\n\t\tconst [visit, args, defaultHandler] = this.parseCallArgs(hook, arg1, arg2, arg3);\n\t\tconst { before, handler, after } = this.getHandlers(hook, defaultHandler);\n\t\tthis.runSync(before, visit, args);\n\t\tconst [result] = this.runSync(handler, visit, args, true);\n\t\tthis.runSync(after, visit, args);\n\t\tthis.dispatchDomEvent(hook, visit, args);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Parse the call arguments for call() and callSync() to allow legacy argument order.\n\t */\n\tprotected parseCallArgs<T extends HookName>(\n\t\thook: T,\n\t\targ1: Visit | HookArguments<T> | undefined,\n\t\targ2: HookArguments<T> | HookDefaultHandler<T>,\n\t\targ3?: HookDefaultHandler<T>\n\t): [Visit | undefined, HookArguments<T>, HookDefaultHandler<T> | undefined] {\n\t\tconst isLegacyOrder =\n\t\t\t!(arg1 instanceof Visit) && (typeof arg1 === 'object' || typeof arg2 === 'function');\n\t\tif (isLegacyOrder) {\n\t\t\t// Legacy positioning: arguments in second or handler passed in third place\n\t\t\treturn [undefined, arg1 as HookArguments<T>, arg2 as HookDefaultHandler<T>];\n\t\t} else {\n\t\t\t// Default positioning: visit passed in as first argument\n\t\t\treturn [arg1, arg2 as HookArguments<T>, arg3];\n\t\t}\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, as `Promise`s that will be `await`ed.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): Promise<Awaited<ReturnType<HookDefaultHandler<T>>>[]>; // prettier-ignore\n\t// Overload:  running user handler: expect no specific type\n\tprotected async run<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): Promise<unknown[]>; // prettier-ignore\n\t// Implementation\n\tprotected async run<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): Promise<Awaited<ReturnType<HookDefaultHandler<T>>> | unknown[]> {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = await runAsPromise(handler, [visit, args, defaultHandler]);\n\t\t\t\tresults.push(result);\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Execute the handlers for a hook, in order, without `await`ing any returned `Promise`s.\n\t * @param registrations The registrations (handler + options) to execute\n\t * @param args Arguments to pass to the handler\n\t */\n\n\t// Overload: running HookDefaultHandler: expect HookDefaultHandler return type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T, HookDefaultHandler<T>>[], visit: Visit | undefined, args: HookArguments<T>, rethrow: true): ReturnType<HookDefaultHandler<T>>[]; // prettier-ignore\n\t// Overload: running user handler: expect no specific type\n\tprotected runSync<T extends HookName>(registrations: HookRegistration<T>[], visit: Visit | undefined, args: HookArguments<T>): unknown[]; // prettier-ignore\n\t// Implementation\n\tprotected runSync<T extends HookName, R extends HookRegistration<T>[]>(\n\t\tregistrations: R,\n\t\tvisit: Visit | undefined = this.swup.visit,\n\t\targs: HookArguments<T>,\n\t\trethrow: boolean = false\n\t): (ReturnType<HookDefaultHandler<T>> | unknown)[] {\n\t\tconst results = [];\n\t\tfor (const { hook, handler, defaultHandler, once } of registrations) {\n\t\t\tif (visit?.done) continue;\n\t\t\tif (once) this.off(hook, handler);\n\t\t\ttry {\n\t\t\t\tconst result = (handler as HookDefaultHandler<T>)(visit, args, defaultHandler);\n\t\t\t\tresults.push(result);\n\t\t\t\tif (isPromise(result)) {\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`Swup will not await Promises in handler for synchronous hook '${hook}'.`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tif (rethrow) {\n\t\t\t\t\tthrow error;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error(`Error in hook '${hook}':`, error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn results;\n\t}\n\n\t/**\n\t * Get all registered handlers for a hook, sorted by priority and registration order.\n\t * @param hook Name of the hook\n\t * @param defaultHandler The optional default handler of this hook\n\t * @returns An object with the handlers sorted into `before` and `after` arrays,\n\t *          as well as a flag indicating if the original handler was replaced\n\t */\n\tprotected getHandlers<T extends HookName>(hook: T, defaultHandler?: HookDefaultHandler<T>) {\n\t\tconst ledger = this.get(hook);\n\t\tif (!ledger) {\n\t\t\treturn { found: false, before: [], handler: [], after: [], replaced: false };\n\t\t}\n\n\t\tconst registrations = Array.from(ledger.values());\n\n\t\t// Let TypeScript know that replaced handlers are default handlers by filtering to true\n\t\tconst def = (T: HookRegistration<T>): T is HookRegistration<T, HookDefaultHandler<T>> => true; // prettier-ignore\n\t\tconst sort = this.sortRegistrations;\n\n\t\t// Filter into before, after, and replace handlers\n\t\tconst before = registrations.filter(({ before, replace }) => before && !replace).sort(sort);\n\t\tconst replace = registrations.filter(({ replace }) => replace).filter(def).sort(sort); // prettier-ignore\n\t\tconst after = registrations.filter(({ before, replace }) => !before && !replace).sort(sort);\n\t\tconst replaced = replace.length > 0;\n\n\t\t// Define main handler registration\n\t\t// Created as HookRegistration[] array to allow passing it into hooks.run() directly\n\t\tlet handler: HookRegistration<T, HookDefaultHandler<T>>[] = [];\n\t\tif (defaultHandler) {\n\t\t\thandler = [{ id: 0, hook, handler: defaultHandler }];\n\t\t\tif (replaced) {\n\t\t\t\tconst index = replace.length - 1;\n\t\t\t\tconst { handler: replacingHandler, once } = replace[index];\n\t\t\t\tconst createDefaultHandler = (index: number): HookDefaultHandler<T> | undefined => {\n\t\t\t\t\tconst next = replace[index - 1];\n\t\t\t\t\tif (next) {\n\t\t\t\t\t\treturn (visit, args) =>\n\t\t\t\t\t\t\tnext.handler(visit, args, createDefaultHandler(index - 1));\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn defaultHandler;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst nestedDefaultHandler = createDefaultHandler(index);\n\t\t\t\thandler = [{ id: 0, hook, once, handler: replacingHandler, defaultHandler: nestedDefaultHandler }]; // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\treturn { found: true, before, handler, after, replaced };\n\t}\n\n\t/**\n\t * Sort two hook registrations by priority and registration order.\n\t * @param a The registration object to compare\n\t * @param b The other registration object to compare with\n\t * @returns The sort direction\n\t */\n\tprotected sortRegistrations<T extends HookName>(\n\t\ta: HookRegistration<T>,\n\t\tb: HookRegistration<T>\n\t): number {\n\t\tconst priority = (a.priority ?? 0) - (b.priority ?? 0);\n\t\tconst id = a.id - b.id;\n\t\treturn priority || id || 0;\n\t}\n\n\t/**\n\t * Dispatch a custom event on the `document` for a hook. Prefixed with `swup:`\n\t * @param hook Name of the hook.\n\t */\n\tprotected dispatchDomEvent<T extends HookName>(\n\t\thook: T,\n\t\tvisit: Visit | undefined,\n\t\targs?: HookArguments<T>\n\t): void {\n\t\tif (visit?.done) return;\n\n\t\tconst detail: HookEventDetail = { hook, args, visit: visit || this.swup.visit };\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:any`, { detail, bubbles: true })\n\t\t);\n\t\tdocument.dispatchEvent(\n\t\t\tnew CustomEvent<HookEventDetail>(`swup:${hook}`, { detail, bubbles: true })\n\t\t);\n\t}\n\n\t/**\n\t * Parse a hook name into the name and any modifiers.\n\t * @param hook Name of the hook.\n\t */\n\tparseName(hook: HookName | HookNameWithModifier): [HookName, Partial<HookOptions>] {\n\t\tconst [name, ...modifiers] = hook.split('.');\n\t\tconst options = modifiers.reduce((acc, mod) => ({ ...acc, [mod]: true }), {});\n\t\treturn [name as HookName, options];\n\t}\n}\n", "import { query } from '../utils.js';\n\n/**\n * Find the anchor element for a given hash.\n *\n * @param hash Hash with or without leading '#'\n * @returns The element, if found, or null.\n *\n * @see https://html.spec.whatwg.org/#find-a-potential-indicated-element\n */\nexport const getAnchorElement = (hash?: string): Element | null => {\n\tif (hash && hash.charAt(0) === '#') {\n\t\thash = hash.substring(1);\n\t}\n\n\tif (!hash) {\n\t\treturn null;\n\t}\n\n\tconst decoded = decodeURIComponent(hash);\n\tlet element =\n\t\tdocument.getElementById(hash) ||\n\t\tdocument.getElementById(decoded) ||\n\t\tquery(`a[name='${CSS.escape(hash)}']`) ||\n\t\tquery(`a[name='${CSS.escape(decoded)}']`);\n\n\tif (!element && hash === 'top') {\n\t\telement = document.body;\n\t}\n\n\treturn element;\n};\n", "import { queryAll } from '../utils.js';\nimport type Swup from '../Swup.js';\nimport type { Options } from '../Swup.js';\n\nconst TRANSITION = 'transition';\nconst ANIMATION = 'animation';\n\ntype AnimationType = typeof TRANSITION | typeof ANIMATION;\ntype AnimationEndEvent = `${AnimationType}end`;\ntype AnimationProperty = 'Delay' | 'Duration';\ntype AnimationStyleKey = `${AnimationType}${AnimationProperty}` | 'transitionProperty';\n\nexport type AnimationDirection = 'in' | 'out';\n\n/**\n * Return a Promise that resolves when all CSS animations and transitions\n * are done on the page. Filters by selector or takes elements directly.\n */\nexport async function awaitAnimations(\n\tthis: Swup,\n\t{\n\t\tselector,\n\t\telements\n\t}: {\n\t\tselector: Options['animationSelector'];\n\t\telements?: NodeListOf<HTMLElement> | HTMLElement[];\n\t}\n): Promise<void> {\n\t// Allow usage of swup without animations: { animationSelector: false }\n\tif (selector === false && !elements) {\n\t\treturn;\n\t}\n\n\t// Allow passing in elements\n\tlet animatedElements: HTMLElement[] = [];\n\tif (elements) {\n\t\tanimatedElements = Array.from(elements);\n\t} else if (selector) {\n\t\tanimatedElements = queryAll(selector, document.body);\n\t\t// Warn if no elements match the selector, but keep things going\n\t\tif (!animatedElements.length) {\n\t\t\tconsole.warn(`[swup] No elements found matching animationSelector \\`${selector}\\``);\n\t\t\treturn;\n\t\t}\n\t}\n\n\tconst awaitedAnimations = animatedElements.map((el) => awaitAnimationsOnElement(el));\n\tconst hasAnimations = awaitedAnimations.filter(Boolean).length > 0;\n\tif (!hasAnimations) {\n\t\tif (selector) {\n\t\t\tconsole.warn(\n\t\t\t\t`[swup] No CSS animation duration defined on elements matching \\`${selector}\\``\n\t\t\t);\n\t\t}\n\t\treturn;\n\t}\n\n\tawait Promise.all(awaitedAnimations);\n}\n\nfunction awaitAnimationsOnElement(element: HTMLElement): Promise<void> | false {\n\tconst { type, timeout, propCount } = getTransitionInfo(element);\n\n\t// Resolve immediately if no transition defined\n\tif (!type || !timeout) {\n\t\treturn false;\n\t}\n\n\treturn new Promise((resolve) => {\n\t\tconst endEvent: AnimationEndEvent = `${type}end`;\n\t\tconst startTime = performance.now();\n\t\tlet propsTransitioned = 0;\n\n\t\tconst end = () => {\n\t\t\telement.removeEventListener(endEvent, onEnd);\n\t\t\tresolve();\n\t\t};\n\n\t\tconst onEnd = (event: TransitionEvent | AnimationEvent) => {\n\t\t\t// Skip transitions on child elements\n\t\t\tif (event.target !== element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Skip transitions that happened before we started listening\n\t\t\tconst elapsedTime = (performance.now() - startTime) / 1000;\n\t\t\tif (elapsedTime < event.elapsedTime) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// End if all properties have transitioned\n\t\t\tif (++propsTransitioned >= propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t};\n\n\t\tsetTimeout(() => {\n\t\t\tif (propsTransitioned < propCount) {\n\t\t\t\tend();\n\t\t\t}\n\t\t}, timeout + 1);\n\n\t\telement.addEventListener(endEvent, onEnd);\n\t});\n}\n\nfunction getTransitionInfo(element: Element) {\n\tconst styles = window.getComputedStyle(element);\n\n\tconst transitionDelays = getStyleProperties(styles, `${TRANSITION}Delay`);\n\tconst transitionDurations = getStyleProperties(styles, `${TRANSITION}Duration`);\n\tconst transitionTimeout = calculateTimeout(transitionDelays, transitionDurations);\n\n\tconst animationDelays = getStyleProperties(styles, `${ANIMATION}Delay`);\n\tconst animationDurations = getStyleProperties(styles, `${ANIMATION}Duration`);\n\tconst animationTimeout = calculateTimeout(animationDelays, animationDurations);\n\n\tconst timeout = Math.max(transitionTimeout, animationTimeout);\n\tconst type: AnimationType | null =\n\t\ttimeout > 0 ? (transitionTimeout > animationTimeout ? TRANSITION : ANIMATION) : null;\n\tconst propCount = type\n\t\t? type === TRANSITION\n\t\t\t? transitionDurations.length\n\t\t\t: animationDurations.length\n\t\t: 0;\n\n\treturn {\n\t\ttype,\n\t\ttimeout,\n\t\tpropCount\n\t};\n}\n\nexport function getStyleProperties(styles: CSSStyleDeclaration, key: AnimationStyleKey): string[] {\n\treturn (styles[key] || '').split(', ');\n}\n\nexport function calculateTimeout(delays: string[], durations: string[]): number {\n\twhile (delays.length < durations.length) {\n\t\tdelays = delays.concat(delays);\n\t}\n\n\treturn Math.max(...durations.map((duration, i) => toMs(duration) + toMs(delays[i])));\n}\n\nexport function toMs(time: string): number {\n\treturn parseFloat(time) * 1000;\n}\n", "import type Swup from '../Swup.js';\nimport { FetchError, type FetchOptions, type PageData } from './fetchPage.js';\nimport { type VisitInitOptions, type Visit, VisitState } from './Visit.js';\nimport { createHistoryRecord, updateHistoryRecord, Location, classify } from '../helpers.js';\nimport { getContextualAttr } from '../utils.js';\n\nexport type HistoryAction = 'push' | 'replace';\nexport type HistoryDirection = 'forwards' | 'backwards';\nexport type NavigationToSelfAction = 'scroll' | 'navigate';\nexport type CacheControl = Partial<{ read: boolean; write: boolean }>;\n\n/** Define how to navigate to a page. */\ntype NavigationOptions = {\n\t/** Whether this visit is animated. Default: `true` */\n\tanimate?: boolean;\n\t/** Name of a custom animation to run. */\n\tanimation?: string;\n\t/** History action to perform: `push` for creating a new history entry, `replace` for replacing the current entry. Default: `push` */\n\thistory?: HistoryAction;\n\t/** Whether this visit should read from or write to the cache. */\n\tcache?: CacheControl;\n\t/** Custom metadata associated with this visit. */\n\tmeta?: Record<string, unknown>;\n};\n\n/**\n * Navigate to a new URL.\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport function navigate(\n\tthis: Swup,\n\turl: string,\n\toptions: NavigationOptions & FetchOptions = {},\n\tinit: Omit<VisitInitOptions, 'to'> = {}\n) {\n\tif (typeof url !== 'string') {\n\t\tthrow new Error(`swup.navigate() requires a URL parameter`);\n\t}\n\n\t// Check if the visit should be ignored\n\tif (this.shouldIgnoreVisit(url, { el: init.el, event: init.event })) {\n\t\twindow.location.assign(url);\n\t\treturn;\n\t}\n\n\tconst { url: to, hash } = Location.fromUrl(url);\n\n\tconst visit = this.createVisit({ ...init, to, hash });\n\tthis.performNavigation(visit, options);\n}\n\n/**\n * Start a visit to a new URL.\n *\n * Internal method that assumes the visit context has already been created.\n *\n * As a user, you should call `swup.navigate(url)` instead.\n *\n * @param url The URL to navigate to.\n * @param options Options for how to perform this visit.\n * @returns Promise<void>\n */\nexport async function performNavigation(\n\tthis: Swup,\n\tvisit: Visit,\n\toptions: NavigationOptions & FetchOptions = {}\n): Promise<void> {\n\tif (this.navigating) {\n\t\tif (this.visit.state >= VisitState.ENTERING) {\n\t\t\t// Currently navigating and content already loaded? Finish and queue\n\t\t\tvisit.state = VisitState.QUEUED;\n\t\t\tthis.onVisitEnd = () => this.performNavigation(visit, options);\n\t\t\treturn;\n\t\t} else {\n\t\t\t// Currently navigating and content not loaded? Abort running visit\n\t\t\tawait this.hooks.call('visit:abort', this.visit, undefined);\n\t\t\tdelete this.visit.to.document;\n\t\t\tthis.visit.state = VisitState.ABORTED;\n\t\t}\n\t}\n\n\tthis.navigating = true;\n\tthis.visit = visit;\n\n\tconst { el } = visit.trigger;\n\toptions.referrer = options.referrer || this.location.url;\n\n\tif (options.animate === false) {\n\t\tvisit.animation.animate = false;\n\t}\n\n\t// Clean up old animation classes\n\tif (!visit.animation.animate) {\n\t\tthis.classes.clear();\n\t}\n\n\t// Get history action from option or attribute on trigger element\n\tconst history = options.history || getContextualAttr(el, 'data-swup-history');\n\tif (typeof history === 'string' && ['push', 'replace'].includes(history)) {\n\t\tvisit.history.action = history as HistoryAction;\n\t}\n\n\t// Get custom animation name from option or attribute on trigger element\n\tconst animation = options.animation || getContextualAttr(el, 'data-swup-animation');\n\tif (typeof animation === 'string') {\n\t\tvisit.animation.name = animation;\n\t}\n\n\t// Get custom metadata from option\n\tvisit.meta = options.meta || {};\n\n\t// Sanitize cache option\n\tif (typeof options.cache === 'object') {\n\t\tvisit.cache.read = options.cache.read ?? visit.cache.read;\n\t\tvisit.cache.write = options.cache.write ?? visit.cache.write;\n\t} else if (options.cache !== undefined) {\n\t\tvisit.cache = { read: !!options.cache, write: !!options.cache };\n\t}\n\t// Delete this so that window.fetch doesn't mis-interpret it\n\tdelete options.cache;\n\n\ttry {\n\t\tawait this.hooks.call('visit:start', visit, undefined);\n\n\t\tvisit.state = VisitState.STARTED;\n\n\t\t// Begin loading page\n\t\tconst page = this.hooks.call('page:load', visit, { options }, async (visit, args) => {\n\t\t\t// Read from cache\n\t\t\tlet cachedPage: PageData | undefined;\n\t\t\tif (visit.cache.read) {\n\t\t\t\tcachedPage = this.cache.get(visit.to.url);\n\t\t\t}\n\n\t\t\targs.page = cachedPage || (await this.fetchPage(visit.to.url, args.options));\n\t\t\targs.cache = !!cachedPage;\n\n\t\t\treturn args.page;\n\t\t});\n\n\t\t/**\n\t\t * When the page is loaded: mark the visit as loaded and save\n\t\t * the raw html and a parsed document of the received page in the visit object\n\t\t */\n\t\tpage.then(({ html }) => {\n\t\t\tvisit.advance(VisitState.LOADED);\n\t\t\tvisit.to.html = html;\n\t\t\tvisit.to.document = new DOMParser().parseFromString(html, 'text/html');\n\t\t});\n\n\t\t// Create/update history record if this is not a popstate call or leads to the same URL\n\t\tconst newUrl = visit.to.url + visit.to.hash;\n\t\tif (!visit.history.popstate) {\n\t\t\tif (visit.history.action === 'replace' || visit.to.url === this.location.url) {\n\t\t\t\tupdateHistoryRecord(newUrl);\n\t\t\t} else {\n\t\t\t\tthis.currentHistoryIndex++;\n\t\t\t\tcreateHistoryRecord(newUrl, { index: this.currentHistoryIndex });\n\t\t\t}\n\t\t}\n\t\tthis.location = Location.fromUrl(newUrl);\n\n\t\t// Mark visit type with classes\n\t\tif (visit.history.popstate) {\n\t\t\tthis.classes.add('is-popstate');\n\t\t}\n\t\tif (visit.animation.name) {\n\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t}\n\n\t\t// Wait for page before starting to animate out?\n\t\tif (visit.animation.wait) {\n\t\t\tawait page;\n\t\t}\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Perform the actual transition: animate and replace content\n\t\tawait this.hooks.call('visit:transition', visit, undefined, async () => {\n\t\t\t// No animation? Just await page and render\n\t\t\tif (!visit.animation.animate) {\n\t\t\t\tawait this.hooks.call('animation:skip', undefined);\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Animate page out, render page, animate page in\n\t\t\tvisit.advance(VisitState.LEAVING);\n\t\t\tawait this.animatePageOut(visit);\n\t\t\tif (visit.animation.native && document.startViewTransition) {\n\t\t\t\tawait document.startViewTransition(\n\t\t\t\t\tasync () => await this.renderPage(visit, await page)\n\t\t\t\t).finished;\n\t\t\t} else {\n\t\t\t\tawait this.renderPage(visit, await page);\n\t\t\t}\n\t\t\tawait this.animatePageIn(visit);\n\t\t});\n\n\t\t// Check if failed/aborted in the meantime\n\t\tif (visit.done) return;\n\n\t\t// Finalize visit\n\t\tawait this.hooks.call('visit:end', visit, undefined, () => this.classes.clear());\n\t\tvisit.state = VisitState.COMPLETED;\n\t\tthis.navigating = false;\n\n\t\t/** Run eventually queued function */\n\t\tif (this.onVisitEnd) {\n\t\t\tthis.onVisitEnd();\n\t\t\tthis.onVisitEnd = undefined;\n\t\t}\n\t} catch (error) {\n\t\t// Return early if error is undefined or signals an aborted request\n\t\tif (!error || (error as FetchError)?.aborted) {\n\t\t\tvisit.state = VisitState.ABORTED;\n\t\t\treturn;\n\t\t}\n\n\t\tvisit.state = VisitState.FAILED;\n\n\t\t// Log to console\n\t\tconsole.error(error);\n\n\t\t// Remove current history entry, then load requested url in browser\n\t\tthis.options.skipPopStateHandling = () => {\n\t\t\twindow.location.assign(visit.to.url + visit.to.hash);\n\t\t\treturn true;\n\t\t};\n\n\t\t// Go back to the actual page we're still at\n\t\twindow.history.back();\n\t} finally {\n\t\tdelete visit.to.document;\n\t}\n}\n", "import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the out/leave animation of the current page.\n * @returns Promise<void>\n */\nexport const animatePageOut = async function (this: Swup, visit: Visit) {\n\tawait this.hooks.call('animation:out:start', visit, undefined, () => {\n\t\tthis.classes.add('is-changing', 'is-animating', 'is-leaving');\n\t});\n\n\tawait this.hooks.call('animation:out:await', visit, { skip: false }, (visit, { skip }) => {\n\t\tif (skip) return;\n\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t});\n\n\tawait this.hooks.call('animation:out:end', visit, undefined);\n};\n", "import type Swup from '../Swup.js';\nimport { query, queryAll } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the replacement of content after loading a page.\n *\n * @returns Whether all containers were replaced.\n */\nexport const replaceContent = function (this: Swup, visit: Visit): boolean {\n\tconst incomingDocument = visit.to.document;\n\tif (!incomingDocument) return false;\n\n\t// Update browser title\n\tconst title = incomingDocument.querySelector('title')?.innerText || '';\n\tdocument.title = title;\n\n\t// Save persisted elements\n\tconst persistedElements = queryAll('[data-swup-persist]:not([data-swup-persist=\"\"])');\n\n\t// Update content containers\n\tconst replaced = visit.containers\n\t\t.map((selector) => {\n\t\t\tconst currentEl = document.querySelector(selector);\n\t\t\tconst incomingEl = incomingDocument.querySelector(selector);\n\t\t\tif (currentEl && incomingEl) {\n\t\t\t\tcurrentEl.replaceWith(incomingEl.cloneNode(true));\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!currentEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in current document: ${selector}`);\n\t\t\t}\n\t\t\tif (!incomingEl) {\n\t\t\t\tconsole.warn(`[swup] Container missing in incoming document: ${selector}`);\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t\t.filter(Boolean);\n\n\t// Restore persisted elements\n\tpersistedElements.forEach((existing) => {\n\t\tconst key = existing.getAttribute('data-swup-persist');\n\t\tconst replacement = query(`[data-swup-persist=\"${key}\"]`);\n\t\tif (replacement && replacement !== existing) {\n\t\t\treplacement.replaceWith(existing);\n\t\t}\n\t});\n\n\t// Return true if all containers were replaced\n\treturn replaced.length === visit.containers.length;\n};\n", "import type Swup from '../Swup.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Update the scroll position after page render.\n * @returns Promise<boolean>\n */\nexport const scrollToContent = function (this: Swup, visit: Visit): boolean {\n\tconst options: ScrollIntoViewOptions = { behavior: 'auto' };\n\tconst { target, reset } = visit.scroll;\n\tconst scrollTarget = target ?? visit.to.hash;\n\n\tlet scrolled = false;\n\n\tif (scrollTarget) {\n\t\tscrolled = this.hooks.callSync(\n\t\t\t'scroll:anchor',\n\t\t\tvisit,\n\t\t\t{ hash: scrollTarget, options },\n\t\t\t(visit, { hash, options }) => {\n\t\t\t\tconst anchor = this.getAnchorElement(hash);\n\t\t\t\tif (anchor) {\n\t\t\t\t\tanchor.scrollIntoView(options);\n\t\t\t\t}\n\t\t\t\treturn !!anchor;\n\t\t\t}\n\t\t);\n\t}\n\n\tif (reset && !scrolled) {\n\t\tscrolled = this.hooks.callSync('scroll:top', visit, { options }, (visit, { options }) => {\n\t\t\twindow.scrollTo({ top: 0, left: 0, ...options });\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn scrolled;\n};\n", "import type Swup from '../Swup.js';\nimport { nextTick } from '../utils.js';\nimport type { Visit } from './Visit.js';\n\n/**\n * Perform the in/enter animation of the next page.\n * @returns Promise<void>\n */\nexport const animatePageIn = async function (this: Swup, visit: Visit) {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tconst animation = this.hooks.call(\n\t\t'animation:in:await',\n\t\tvisit,\n\t\t{ skip: false },\n\t\t(visit, { skip }) => {\n\t\t\tif (skip) return;\n\t\t\treturn this.awaitAnimations({ selector: visit.animation.selector });\n\t\t}\n\t);\n\n\tawait nextTick();\n\n\tawait this.hooks.call('animation:in:start', visit, undefined, () => {\n\t\tthis.classes.remove('is-animating');\n\t});\n\n\tawait animation;\n\n\tawait this.hooks.call('animation:in:end', visit, undefined);\n};\n", "import { updateHistoryRecord, getCurrentUrl, classify, Location } from '../helpers.js';\nimport type Swup from '../Swup.js';\nimport type { PageData } from './fetchPage.js';\nimport { VisitState, type Visit } from './Visit.js';\n\n/**\n * Render the next page: replace the content and update scroll position.\n */\nexport const renderPage = async function (this: Swup, visit: Visit, page: PageData): Promise<void> {\n\t// Check if failed/aborted in the meantime\n\tif (visit.done) return;\n\n\tvisit.advance(VisitState.ENTERING);\n\n\tconst { url } = page;\n\n\t// update state if the url was redirected\n\tif (!this.isSameResolvedUrl(getCurrentUrl(), url)) {\n\t\tupdateHistoryRecord(url);\n\t\tthis.location = Location.fromUrl(url);\n\t\tvisit.to.url = this.location.url;\n\t\tvisit.to.hash = this.location.hash;\n\t}\n\n\t// replace content: allow handlers and plugins to overwrite paga data and containers\n\tawait this.hooks.call('content:replace', visit, { page }, (visit, { page }) => {\n\t\tthis.classes.remove('is-leaving');\n\t\t// only add for animated page loads\n\t\tif (visit.animation.animate) {\n\t\t\tthis.classes.add('is-rendering');\n\t\t}\n\t\tconst success = this.replaceContent(visit);\n\t\tif (!success) {\n\t\t\tthrow new Error('[swup] Container mismatch, aborting');\n\t\t}\n\t\tif (visit.animation.animate) {\n\t\t\t// Make sure to add these classes to new containers as well\n\t\t\tthis.classes.add('is-changing', 'is-animating', 'is-rendering');\n\t\t\tif (visit.animation.name) {\n\t\t\t\tthis.classes.add(`to-${classify(visit.animation.name)}`);\n\t\t\t}\n\t\t}\n\t});\n\n\t// scroll into view: either anchor or top of page\n\tawait this.hooks.call('content:scroll', visit, undefined, () => {\n\t\treturn this.scrollToContent(visit);\n\t});\n\n\tawait this.hooks.call('page:view', visit, { url: this.location.url, title: document.title });\n};\n", "import type Swup from '../Swup.js';\n\nexport type Plugin = {\n\t/** Identify as a swup plugin */\n\tisSwupPlugin: true;\n\t/** Name of this plugin */\n\tname: string;\n\t/** Version of this plugin. Currently not in use, defined here for backward compatiblity. */\n\tversion?: string;\n\t/** The swup instance that mounted this plugin */\n\tswup?: Swup;\n\t/** Version requirements of this plugin. Example: `{ swup: '>=4' }` */\n\trequires?: Record<string, string | string[]>;\n\t/** Run on mount */\n\tmount: () => void;\n\t/** Run on unmount */\n\tunmount: () => void;\n\t_beforeMount?: () => void;\n\t_afterUnmount?: () => void;\n\t_checkRequirements?: () => boolean;\n};\n\nconst isSwupPlugin = (maybeInvalidPlugin: unknown): maybeInvalidPlugin is Plugin => {\n\t// @ts-ignore: this might be anything, object or no\n\treturn Boolean(maybeInvalidPlugin?.isSwupPlugin);\n};\n\n/** Install a plugin. */\nexport const use = function (this: Swup, plugin: unknown) {\n\tif (!isSwupPlugin(plugin)) {\n\t\tconsole.error('Not a swup plugin instance', plugin);\n\t\treturn;\n\t}\n\n\tplugin.swup = this;\n\tif (plugin._checkRequirements) {\n\t\tif (!plugin._checkRequirements()) {\n\t\t\treturn;\n\t\t}\n\t}\n\tif (plugin._beforeMount) {\n\t\tplugin._beforeMount();\n\t}\n\tplugin.mount();\n\n\tthis.plugins.push(plugin);\n\n\treturn this.plugins;\n};\n\n/** Uninstall a plugin. */\nexport function unuse(this: Swup, pluginOrName: Plugin | string) {\n\tconst plugin = this.findPlugin(pluginOrName);\n\tif (!plugin) {\n\t\tconsole.error('No such plugin', plugin);\n\t\treturn;\n\t}\n\n\tplugin.unmount();\n\tif (plugin._afterUnmount) {\n\t\tplugin._afterUnmount();\n\t}\n\n\tthis.plugins = this.plugins.filter((p) => p !== plugin);\n\n\treturn this.plugins;\n}\n\n/** Find a plugin by name or reference. */\nexport function findPlugin(this: Swup, pluginOrName: Plugin | string) {\n\treturn this.plugins.find(\n\t\t(plugin) =>\n\t\t\tplugin === pluginOrName ||\n\t\t\tplugin.name === pluginOrName ||\n\t\t\tplugin.name === `Swup${String(pluginOrName)}`\n\t);\n}\n", "import type Swup from '../Swup.js';\n\n/**\n * Utility function to validate and run the global option 'resolveUrl'\n * @param {string} url\n * @returns {string} the resolved url\n */\nexport function resolveUrl(this: Swup, url: string): string {\n\tif (typeof this.options.resolveUrl !== 'function') {\n\t\tconsole.warn(`[swup] options.resolveUrl expects a callback function.`);\n\t\treturn url;\n\t}\n\tconst result = this.options.resolveUrl(url);\n\tif (!result || typeof result !== 'string') {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a url`);\n\t\treturn url;\n\t}\n\tif (result.startsWith('//') || result.startsWith('http')) {\n\t\tconsole.warn(`[swup] options.resolveUrl needs to return a relative url`);\n\t\treturn url;\n\t}\n\treturn result;\n}\n\n/**\n * Compares the resolved version of two paths and returns true if they are the same\n * @param {string} url1\n * @param {string} url2\n * @returns {boolean}\n */\nexport function isSameResolvedUrl(this: Swup, url1: string, url2: string): boolean {\n\treturn this.resolveUrl(url1) === this.resolveUrl(url2);\n}\n", "import { type DelegateEvent } from 'delegate-it';\n\nimport version from './config/version.js';\n\nimport { delegateEvent, getCurrentUrl, Location, updateHistoryRecord } from './helpers.js';\nimport { type DelegateEventUnsubscribe } from './helpers/delegateEvent.js';\n\nimport { Cache } from './modules/Cache.js';\nimport { Classes } from './modules/Classes.js';\nimport { type Visit, createVisit } from './modules/Visit.js';\nimport { Hooks, type HookName, type HookInitOptions } from './modules/Hooks.js';\nimport { getAnchorElement } from './modules/getAnchorElement.js';\nimport { awaitAnimations } from './modules/awaitAnimations.js';\nimport { navigate, performNavigation, type NavigationToSelfAction } from './modules/navigate.js';\nimport { fetchPage } from './modules/fetchPage.js';\nimport { animatePageOut } from './modules/animatePageOut.js';\nimport { replaceContent } from './modules/replaceContent.js';\nimport { scrollToContent } from './modules/scrollToContent.js';\nimport { animatePageIn } from './modules/animatePageIn.js';\nimport { renderPage } from './modules/renderPage.js';\nimport { use, unuse, findPlugin, type Plugin } from './modules/plugins.js';\nimport { isSameResolvedUrl, resolveUrl } from './modules/resolveUrl.js';\nimport { nextTick } from './utils.js';\nimport { type HistoryState } from './helpers/history.js';\n\n/** Options for customizing swup's behavior. */\nexport type Options = {\n\t/** Whether history visits are animated. Default: `false` */\n\tanimateHistoryBrowsing: boolean;\n\t/** Selector for detecting animation timing. Default: `[class*=\"transition-\"]` */\n\tanimationSelector: string | false;\n\t/** Elements on which to add animation classes. Default: `html` element */\n\tanimationScope: 'html' | 'containers';\n\t/** Enable in-memory page cache. Default: `true` */\n\tcache: boolean;\n\t/** Content containers to be replaced on page visits. Default: `['#swup']` */\n\tcontainers: string[];\n\t/** Callback for ignoring visits. Receives the element and event that triggered the visit. */\n\tignoreVisit: (url: string, { el, event }: { el?: Element; event?: Event }) => boolean;\n\t/** Selector for links that trigger visits. Default: `'a[href]'` */\n\tlinkSelector: string;\n\t/** How swup handles links to the same page. Default: `scroll` */\n\tlinkToSelf: NavigationToSelfAction;\n\t/** Enable native animations using the View Transitions API. */\n\tnative: boolean;\n\t/** Hook handlers to register. */\n\thooks: Partial<HookInitOptions>;\n\t/** Plugins to register on startup. */\n\tplugins: Plugin[];\n\t/** Custom headers sent along with fetch requests. */\n\trequestHeaders: Record<string, string>;\n\t/** Rewrite URLs before loading them. */\n\tresolveUrl: (url: string) => string;\n\t/** Callback for telling swup to ignore certain popstate events.  */\n\tskipPopStateHandling: (event: PopStateEvent) => boolean;\n\t/** Request timeout in milliseconds. */\n\ttimeout: number;\n};\n\nconst defaults: Options = {\n\tanimateHistoryBrowsing: false,\n\tanimationSelector: '[class*=\"transition-\"]',\n\tanimationScope: 'html',\n\tcache: true,\n\tcontainers: ['#swup'],\n\thooks: {},\n\tignoreVisit: (url, { el } = {}) => !!el?.closest('[data-no-swup]'),\n\tlinkSelector: 'a[href]',\n\tlinkToSelf: 'scroll',\n\tnative: false,\n\tplugins: [],\n\tresolveUrl: (url) => url,\n\trequestHeaders: {\n\t\t'X-Requested-With': 'swup',\n\t\t'Accept': 'text/html, application/xhtml+xml'\n\t},\n\tskipPopStateHandling: (event) => (event.state as HistoryState)?.source !== 'swup',\n\ttimeout: 0\n};\n\n/** Swup page transition library. */\nexport default class Swup {\n\t/** Library version */\n\treadonly version: string = version;\n\t/** Options passed into the instance */\n\toptions: Options;\n\t/** Default options before merging user options */\n\treadonly defaults: Options = defaults;\n\t/** Registered plugin instances */\n\tplugins: Plugin[] = [];\n\t/** Data about the current visit */\n\tvisit: Visit;\n\t/** Cache instance */\n\treadonly cache: Cache;\n\t/** Hook registry */\n\treadonly hooks: Hooks;\n\t/** Animation class manager */\n\treadonly classes: Classes;\n\t/** Location of the currently visible page */\n\tlocation: Location = Location.fromUrl(window.location.href);\n\t/** URL of the currently visible page @deprecated Use swup.location.url instead */\n\tget currentPageUrl(): string {\n\t\treturn this.location.url;\n\t}\n\t/** Index of the current history entry */\n\tprotected currentHistoryIndex: number;\n\t/** Delegated event subscription handle */\n\tprotected clickDelegate?: DelegateEventUnsubscribe;\n\t/** Navigation status */\n\tprotected navigating: boolean = false;\n\t/** Run anytime a visit ends */\n\tprotected onVisitEnd?: () => Promise<unknown>;\n\n\t/** Install a plugin */\n\tuse = use;\n\t/** Uninstall a plugin */\n\tunuse = unuse;\n\t/** Find a plugin by name or instance */\n\tfindPlugin = findPlugin;\n\n\t/** Log a message. Has no effect unless debug plugin is installed */\n\tlog: (message: string, context?: unknown) => void = () => {};\n\n\t/** Navigate to a new URL */\n\tnavigate = navigate;\n\t/** Actually perform a navigation */\n\tprotected performNavigation = performNavigation;\n\t/** Create a new context for this visit */\n\tprotected createVisit = createVisit;\n\t/** Register a delegated event listener */\n\tdelegateEvent = delegateEvent;\n\t/** Fetch a page from the server */\n\tfetchPage = fetchPage;\n\t/** Resolve when animations on the page finish */\n\tawaitAnimations = awaitAnimations;\n\tprotected renderPage = renderPage;\n\t/** Replace the content after page load */\n\treplaceContent = replaceContent;\n\tprotected animatePageIn = animatePageIn;\n\tprotected animatePageOut = animatePageOut;\n\tprotected scrollToContent = scrollToContent;\n\t/** Find the anchor element for a given hash */\n\tgetAnchorElement = getAnchorElement;\n\n\t/** Get the current page URL */\n\tgetCurrentUrl = getCurrentUrl;\n\t/** Resolve a URL to its final location */\n\tresolveUrl = resolveUrl;\n\t/** Check if two URLs resolve to the same location */\n\tprotected isSameResolvedUrl = isSameResolvedUrl;\n\n\tconstructor(options: Partial<Options> = {}) {\n\t\t// Merge defaults and options\n\t\tthis.options = { ...this.defaults, ...options };\n\n\t\tthis.handleLinkClick = this.handleLinkClick.bind(this);\n\t\tthis.handlePopState = this.handlePopState.bind(this);\n\n\t\tthis.cache = new Cache(this);\n\t\tthis.classes = new Classes(this);\n\t\tthis.hooks = new Hooks(this);\n\t\tthis.visit = this.createVisit({ to: '' });\n\n\t\tthis.currentHistoryIndex = (window.history.state as HistoryState)?.index ?? 1;\n\n\t\tthis.enable();\n\t}\n\n\t/** Enable this instance, adding listeners and classnames. */\n\tasync enable() {\n\t\t// Add event listener\n\t\tconst { linkSelector } = this.options;\n\t\tthis.clickDelegate = this.delegateEvent(linkSelector, 'click', this.handleLinkClick);\n\n\t\twindow.addEventListener('popstate', this.handlePopState);\n\n\t\t// Set scroll restoration to manual if animating history visits\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\twindow.history.scrollRestoration = 'manual';\n\t\t}\n\n\t\t// Initial save to cache\n\t\tif (this.options.cache) {\n\t\t\t// Disabled to avoid caching modified dom state: logic moved to preload plugin\n\t\t\t// https://github.com/swup/swup/issues/475\n\t\t}\n\n\t\t// Sanitize/check native option\n\t\tthis.options.native = this.options.native && !!document.startViewTransition;\n\n\t\t// Mount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.use(plugin));\n\n\t\t// Install user hooks\n\t\tfor (const [key, handler] of Object.entries(this.options.hooks)) {\n\t\t\t// Build hook options from modifier suffix: 'content:replace.before' => { before: true }\n\t\t\tconst [hook, modifiers] = this.hooks.parseName(key as HookName);\n\t\t\t// @ts-expect-error: object.entries() does not preserve key/value types\n\t\t\tthis.hooks.on(hook, handler, modifiers);\n\t\t}\n\n\t\t// Create initial history record\n\t\tif ((window.history.state as HistoryState)?.source !== 'swup') {\n\t\t\tupdateHistoryRecord(null, { index: this.currentHistoryIndex });\n\t\t}\n\n\t\t// Give consumers a chance to hook into enable\n\t\tawait nextTick();\n\n\t\t// Trigger enable hook\n\t\tawait this.hooks.call('enable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.add('swup-enabled');\n\t\t\thtml.classList.toggle('swup-native', this.options.native);\n\t\t});\n\t}\n\n\t/** Disable this instance, removing listeners and classnames. */\n\tasync destroy() {\n\t\t// remove delegated listener\n\t\tthis.clickDelegate!.destroy();\n\n\t\t// remove popstate listener\n\t\twindow.removeEventListener('popstate', this.handlePopState);\n\n\t\t// empty cache\n\t\tthis.cache.clear();\n\n\t\t// unmount plugins\n\t\tthis.options.plugins.forEach((plugin) => this.unuse(plugin));\n\n\t\t// trigger disable hook\n\t\tawait this.hooks.call('disable', undefined, undefined, () => {\n\t\t\tconst html = document.documentElement;\n\t\t\thtml.classList.remove('swup-enabled');\n\t\t\thtml.classList.remove('swup-native');\n\t\t});\n\n\t\t// remove handlers\n\t\tthis.hooks.clear();\n\t}\n\n\t/** Determine if a visit should be ignored by swup, based on URL or trigger element. */\n\tshouldIgnoreVisit(href: string, { el, event }: { el?: Element; event?: Event } = {}) {\n\t\tconst { origin, url, hash } = Location.fromUrl(href);\n\n\t\t// Ignore if the new origin doesn't match the current one\n\t\tif (origin !== window.location.origin) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the link/form would open a new window (or none at all)\n\t\tif (el && this.triggerWillOpenNewWindow(el)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ignore if the visit should be ignored as per user options\n\t\tif (this.options.ignoreVisit(url + hash, { el, event })) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Finally, allow the visit\n\t\treturn false;\n\t}\n\n\tprotected handleLinkClick(event: DelegateEvent<MouseEvent>) {\n\t\tconst el = event.delegateTarget as HTMLAnchorElement;\n\t\tconst { href, url, hash } = Location.fromElement(el);\n\n\t\t// Exit early if the link should be ignored\n\t\tif (this.shouldIgnoreVisit(href, { el, event })) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Ignore if swup is currently navigating towards the link's URL\n\t\tif (this.navigating && url === this.visit.to.url) {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst visit = this.createVisit({ to: url, hash, el, event });\n\n\t\t// Exit early if control key pressed\n\t\tif (event.metaKey || event.ctrlKey || event.shiftKey || event.altKey) {\n\t\t\tthis.hooks.callSync('link:newtab', visit, { href });\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if other than left mouse button\n\t\tif (event.button !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.hooks.callSync('link:click', visit, { el, event }, () => {\n\t\t\tconst from = visit.from.url ?? '';\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Handle links to the same page\n\t\t\tif (!url || url === from) {\n\t\t\t\tif (hash) {\n\t\t\t\t\t// With hash: scroll to anchor\n\t\t\t\t\tthis.hooks.callSync('link:anchor', visit, { hash }, () => {\n\t\t\t\t\t\tupdateHistoryRecord(url + hash);\n\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// Without hash: scroll to top or load/reload page\n\t\t\t\t\tthis.hooks.callSync('link:self', visit, undefined, () => {\n\t\t\t\t\t\tif (this.options.linkToSelf === 'navigate') {\n\t\t\t\t\t\t\tthis.performNavigation(visit);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tupdateHistoryRecord(url);\n\t\t\t\t\t\t\tthis.scrollToContent(visit);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Exit early if the resolved path hasn't changed\n\t\t\tif (this.isSameResolvedUrl(url, from)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Finally, proceed with loading the page\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\tprotected handlePopState(event: PopStateEvent) {\n\t\tconst href: string = (event.state as HistoryState)?.url ?? window.location.href;\n\n\t\t// Exit early if this event should be ignored\n\t\tif (this.options.skipPopStateHandling(event)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Exit early if the resolved path hasn't changed\n\t\tif (this.isSameResolvedUrl(getCurrentUrl(), this.location.url)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { url, hash } = Location.fromUrl(href);\n\n\t\tconst visit = this.createVisit({ to: url, hash, event });\n\n\t\t// Mark as history visit\n\t\tvisit.history.popstate = true;\n\n\t\t// Determine direction of history visit\n\t\tconst index = (event.state as HistoryState)?.index ?? 0;\n\t\tif (index && index !== this.currentHistoryIndex) {\n\t\t\tconst direction = index - this.currentHistoryIndex > 0 ? 'forwards' : 'backwards';\n\t\t\tvisit.history.direction = direction;\n\t\t\tthis.currentHistoryIndex = index;\n\t\t}\n\n\t\t// Disable animation & scrolling for history visits\n\t\tvisit.animation.animate = false;\n\t\tvisit.scroll.reset = false;\n\t\tvisit.scroll.target = false;\n\n\t\t// Animated history visit: re-enable animation & scroll reset\n\t\tif (this.options.animateHistoryBrowsing) {\n\t\t\tvisit.animation.animate = true;\n\t\t\tvisit.scroll.reset = true;\n\t\t}\n\n\t\tthis.hooks.callSync('history:popstate', visit, { event }, () => {\n\t\t\tthis.performNavigation(visit);\n\t\t});\n\t}\n\n\t/** Determine whether an element will open a new tab when clicking/activating. */\n\tprotected triggerWillOpenNewWindow(triggerEl: Element) {\n\t\tif (triggerEl.matches('[download], [target=\"_blank\"]')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n"],
  "mappings": "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",
  "names": ["i", "j", "value", "_a", "result", "char", "prefix", "x", "m", "i", "classify", "text", "fallback", "String", "toLowerCase", "replace", "getCurrentUrl", "hash", "window", "location", "pathname", "search", "createHistoryRecord", "url", "data", "state", "_extends", "random", "Math", "source", "history", "pushState", "updateHistoryRecord", "currentState", "replaceState", "delegateEvent", "selector", "type", "callback", "options", "controller", "AbortController", "signal", "delegate", "destroy", "abort", "Location", "URL", "constructor", "base", "document", "baseURI", "super", "toString", "Object", "setPrototypeOf", "this", "prototype", "el", "href", "getAttribute", "matchPath", "path", "Array", "isArray", "length", "match", "error", "Error", "FetchError", "message", "details", "status", "aborted", "timedOut", "name", "async", "fetchPage", "_options$timeout", "fromUrl", "visit", "headers", "requestHeaders", "timeout", "response", "timeoutId", "setTimeout", "hooks", "call", "fetch", "clearTimeout", "responseUrl", "html", "finalUrl", "page", "cache", "write", "method", "set", "Cache", "swup", "pages", "Map", "size", "all", "copy", "forEach", "key", "has", "resolve", "get", "result", "callSync", "update", "payload", "delete", "clear", "undefined", "prune", "predicate", "urlToResolve", "resolveUrl", "query", "context", "querySelector", "queryAll", "from", "querySelectorAll", "nextTick", "Promise", "requestAnimationFrame", "isPromise", "obj", "then", "runAsPromise", "func", "args", "reject", "forceReflow", "element", "_element", "body", "getBoundingClientRect", "getContextualAttr", "attr", "target", "closest", "hasAttribute", "Classes", "swupClasses", "selectors", "scope", "animation", "containers", "join", "targets", "trim", "add", "classes", "classList", "remove", "className", "split", "filter", "c", "isSwupClass", "some", "startsWith", "Visit", "id", "to", "trigger", "scroll", "meta", "event", "animate", "wait", "native", "animationScope", "animationSelector", "read", "action", "popstate", "direction", "reset", "advance", "done", "createVisit", "Hooks", "registry", "init", "hook", "create", "exists", "ledger", "console", "on", "handler", "warn", "registration", "off", "before", "once", "arg1", "arg2", "arg3", "defaultHandler", "parseCallArgs", "after", "getHandlers", "run", "dispatchDomEvent", "runSync", "registrations", "rethrow", "results", "push", "found", "replaced", "values", "sort", "sortRegistrations", "T", "index", "replacingHandler", "createDefaultHandler", "next", "a", "b", "_a$priority", "_b$priority", "priority", "detail", "dispatchEvent", "CustomEvent", "bubbles", "parseName", "modifiers", "reduce", "acc", "mod", "getAnchorElement", "charAt", "substring", "decoded", "decodeURIComponent", "getElementById", "CSS", "escape", "TRANSITION", "ANIMATION", "awaitAnimations", "elements", "animatedElements", "awaitedAnimations", "map", "propCount", "styles", "getComputedStyle", "transitionDelays", "getStyleProperties", "transitionDurations", "transitionTimeout", "calculateTimeout", "animationDelays", "animationDurations", "animationTimeout", "max", "endEvent", "startTime", "performance", "now", "propsTransitioned", "end", "removeEventListener", "onEnd", "elapsedTime", "addEventListener", "Boolean", "delays", "durations", "concat", "duration", "i", "toMs", "time", "parseFloat", "navigate", "shouldIgnoreVisit", "assign", "performNavigation", "navigating", "onVisitEnd", "referrer", "includes", "_options$cache$read", "_options$cache$write", "cachedPage", "DOMParser", "parseFromString", "newUrl", "currentHistoryIndex", "renderPage", "animatePageOut", "startViewTransition", "finished", "animatePageIn", "skipPopStateHandling", "back", "skip", "replaceContent", "_incomingDocument$que", "incomingDocument", "title", "innerText", "persistedElements", "currentEl", "incomingEl", "replaceWith", "cloneNode", "existing", "replacement", "scrollToContent", "behavior", "scrollTarget", "scrolled", "anchor", "scrollIntoView", "scrollTo", "top", "left", "isSameResolvedUrl", "use", "plugin", "maybeInvalidPlugin", "isSwupPlugin", "_checkRequirements", "_beforeMount", "mount", "plugins", "unuse", "pluginOrName", "findPlugin", "unmount", "_afterUnmount", "p", "find", "url1", "url2", "defaults", "animateHistoryBrowsing", "ignoreVisit", "linkSelector", "linkToSelf", "Accept", "_event$state", "Swup", "currentPageUrl", "_window$history$state", "_window$history$state2", "version", "clickDelegate", "log", "handleLinkClick", "bind", "handlePopState", "enable", "_window$history$state3", "scrollRestoration", "entries", "documentElement", "toggle", "origin", "triggerWillOpenNewWindow", "delegateTarget", "fromElement", "preventDefault", "metaKey", "ctrlKey", "shiftKey", "altKey", "button", "_visit$from$url", "_event$state$url", "_event$state2", "_event$state$index", "_event$state3", "triggerEl", "matches"]
}
